val b: Array<Array<Char>> = Array(3) { Array(3) { ' ' } }
var turn = 0

fun main() {
    display()
    do {
        play()
    } while (check())
}

fun play() {
    val sira = if (turn % 2 == 1) 'O' else 'X'
    while (true) {
        println("Enter the coordinates:")
        val inp2 = readLine()!!
        if (inp2.matches("-?\\d+ -?\\d+".toRegex())) {
            val ar = inp2.split(" ").map { it.toInt() }
            if (ar[0].toInt() in 1..3 && ar[1].toInt() in 1..3) {
                if (b[ar[0].toInt() - 1][ar[1].toInt() - 1] == ' ') {
                    b[ar[0] - 1][ar[1] - 1] = sira
                    turn++
                    display()
                    return
                } else { println("This cell is occupied! Choose another one!") }
            } else { println("Coordinates should be from 1 to 3!") }
        } else { println("You should enter numbers!") }
    }
}

fun check(): Boolean {
    var wincnt = 0
    var winner = ' '
    for (i in 0..2) {
        if (b[0][i] != ' ') {
            if (b[0][i] == b[1][i] && b[1][i] == b[2][i]) { wincnt += 1; winner = b[0][i] } } }
    for (i in 0..2) {
        if (b[i][0] != ' ') {
            if (b[i][0] == b[i][1] && b[i][1] == b[i][2]) { wincnt += 1; winner = b[i][0] } } }
    if (b[1][1] != ' ') {
        if (b[1][1] == b[0][0] && b[1][1] == b[2][2]) { wincnt += 1; winner = b[1][1] }
        if (b[1][1] == b[0][2] && b[1][1] == b[2][0]) { wincnt += 1; winner = b[1][1] }
    }
    var emptyCnt = 0
    b.forEach { e -> emptyCnt += e.count { it == ' ' } }
    if (wincnt > 0) { println("$winner wins"); return false
    } else if (emptyCnt == 0) { println("Draw"); return false
    } else return true
}

fun display() {
    println("---------")
    for (i in b.indices) { println(b[i].joinToString(prefix = "| ", postfix = " |", separator = " ")) }
    println("---------")
}
